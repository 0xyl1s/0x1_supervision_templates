#!/usr/bin/env bash
# https://raw.github.com/epiculture/ec1_supervision_templates/master/ub10.04_x86_64/mu/root_variation_01/00ini/ec1_install_root.phase1

umask 077

if [[ -z ${EC1__USER_ec1_user_home} ]] || [[ -z ${EC1__USER_INIDIR} ]]
then
    echo "ERROR: EC1__USER_HOME (${EC1__USER_HOME}) and EC1__USER_INIDIR (${EC1__USER_INIDIR}) variables must be provided"
    exit 1
fi

ec1_user_home=${EC1__USER_ec1_user_home}
ec1_user_inidir="${EC1__USER_INIDIR}"


ec1_user_inidir="${ec1_user_home}/.ec1.ini"
ec1_user_basedir="${ec1_user_home}/.ec1"
ec1_user_mu_basedir="${ec1_user_home}/.ec1/00mu"

if [[ ! -f ${ec1_user_inidir}/logs/ec1.ini.system.1 ]]
then
    echo "ERROR: can't get to ec1.ini.root_phase1 until ec1.ini.system_ini.1 DEBUG: ${ec1_user_inidir}/logs/ec1.ini.system.1 home = ${ec1_user_home}"
    exit 1
fi

date > ${ec1_user_inidir}/logs/ec1.ini.root_phase1.0

if [[ -d ${ec1_user_basedir} ]]
then
    echo "ERROR: directory ${ec1_user_basedir} exists already"
    exit 1
fi
if [[ -d ${ec1_user_home}/.ssh ]]
then
    mv ${ec1_user_home}/.ssh ${ec1_user_home}/.ssh__pre-ec1
fi

mkdir -p ${ec1_user_mu_basedir}
echo "created dir ${ec1_user_mu_basedir}"
cd ${ec1_user_basedir}

repositories=(
	ec1_lib
	ec1_core
	ec1_core_livelinks
	ec1_xtra
	ec1_xtra_livelinks
	ec1_supervision_templates
	)

for repository in ${repositories[@]}
do
    echo "cloning git://github.com/epiculture/${repository}.git"
    git clone git://github.com/epiculture/${repository}.git
done

#DEBUG: removing the sleeps
rsync -avh --no-o --no-g --stats ${ec1_user_basedir}/ec1_supervision_templates/ub10.04_x86_64/mu/root_variation_01/ ${ec1_user_mu_basedir}/

rm -R ${ec1_user_basedir}/ec1_supervision_templates

mkdir ${ec1_user_home}/.ssh
chmod 700 ${ec1_user_home}/.ssh
echo "created dir ${ec1_user_home}/.ssh"

#openssh
ln -s ${ec1_user_mu_basedir}/openssh/00livelinks/config/config ${ec1_user_home}/.ssh/
ln -s ${ec1_user_mu_basedir}/openssh/00livelinks/authorized_keys/authorized_keys ${ec1_user_home}/.ssh/
ln -s ${ec1_user_mu_basedir}/openssh/00certificates/id_rsa ${ec1_user_home}/.ssh/
ln -s ${ec1_user_mu_basedir}/openssh/00certificates/id_rsa.pub ${ec1_user_home}/.ssh/
cat "${ec1_user_inidir}/authorized_keys.ini" > ${ec1_user_home}/.ssh/authorized_keys

#bash
mv ${ec1_user_home}/.profile ${ec1_user_mu_basedir}/bash/00livelinks/.profile/.profile_00ori
ln -s ${ec1_user_mu_basedir}/bash/00livelinks/.profile/.profile ${ec1_user_home}/
mv ${ec1_user_home}/.bashrc ${ec1_user_mu_basedir}/bash/00livelinks/.bashrc/.bashrc_00ori
ln -s ${ec1_user_mu_basedir}/bash/00livelinks/.bashrc/.bashrc ${ec1_user_home}/
#mc
mkdir ${ec1_user_home}/.mc
ln -s ${ec1_user_mu_basedir}/mc/00livelinks/ini/ini ${ec1_user_home}/.mc/
ln -s ${ec1_user_mu_basedir}/mc/00livelinks/bindings/bindings ${ec1_user_home}/.mc/
#screen
ln -s ${ec1_user_mu_basedir}/screen/00livelinks/.screenrc/.screenrc ${ec1_user_home}/
#rvm
ln -s ${ec1_user_mu_basedir}/rvm/00livelinks/.rvmrc/.rvmrc ~/
#git
ln -s ${ec1_user_mu_basedir}/git/00livelinks/.gitconfig/.gitconfig ${ec1_user_home}/
#vim
ln -s ${ec1_user_mu_basedir}/vim/00livelinks/.vim/.vim ${ec1_user_home}/
ln -s ${ec1_user_mu_basedir}/vim/00livelinks/.vimrc/.vimrc ${ec1_user_home}/

ln -s ${ec1_user_mu_basedir}/.recycle ${ec1_user_home}/

chmod -R go= ${ec1_user_basedir}

echo "root ec1 base installation finished: please copy ssh certificates to ${ec1_user_mu_basedir}/openssh/00certificates/"

bash < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )

date > ${ec1_user_inidir}/logs/ec1.ini.root_phase1.1

#TODO: just exit instead of reboot
reboot
sleep 10

# ____________________________________________________________________
# ᨊ ᨉ  LICENSE ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ ᨊ ᨉ
# This file is part of the libre project Epiculture, distributed under
# the GNU GPLv3 license ( www.epiculture.org/ec1_core/LICENSE )
# Copyright 2005-2012 Pierre-Maël Crétinon
# ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
# vim: ft=sh
