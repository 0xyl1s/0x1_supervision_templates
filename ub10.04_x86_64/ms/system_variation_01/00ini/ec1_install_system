#!/usr/bin/env bash
# https://raw.github.com/epiculture/ec1_supervision_templates/master/ub10.04_x86_64/ms/system_variation_01/00ini/ec1_install_system


# TODO: tests


# ____________________________________________________________________
# >>>>>  ec1_lib   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#{{{

function e__datetime_sec(){
date +%Y-%m-%d_%H%M%S
}

# ――――――――――――――――――――――――――――――――――――――#}}}

# >>> variables#{{{
ec1_system_basedir="/.ec1"
ec1_system_ms_basedir="${ec1_system_basedir}/00ms"
ec1_system_ms_data_dir="${ec1_system_basedir}/00ms/00data"
ec1_user_inidir_relative="$(dirname ${0})"
ec1_user_inidir=$(cd ${ec1_user_inidir_relative}; pwd)
ec1_user_ini_logsdir="${ec1_user_inidir}/logs"

ec1_script_log="${ec1_user_ini_logsdir}/ec1.ini.system"
#}}}

# >>> log ini#{{{
if [[ -f ${ec1_script_log}.done ]]
then
    echo "script already runned: ${ec1_script_log}.done"
    exit
fi
if [[ -f ${ec1_script_log} ]]
then
    echo "ERROR: interrupted script (${0}) execution, see log: ${ec1_script_log}" 2>&1
    exit 1
fi
echo "${0} start - $(e__datetime_sec)" > ${ec1_script_log}
echo "DEBUG: ec1_user_inidir = ${ec1_user_inidir}" >> ${ec1_script_log}
echo "DEBUG: ec1_script_log = ${ec1_script_log}" >> ${ec1_script_log}
if [[ ! -f ${ec1_script_log} ]]
then
    echo "ERROR: can't write log file ${ec1_script_log} (from script ${0})" 2>&1
    exit 1
fi
#}}}

umask 027
ufw allow 22/tcp
ufw --force enable

if [[ ! -d ${ec1_system_basedir} ]]
then
    mkdir ${ec1_system_basedir}
    chmod g+s ${ec1_system_basedir}
    echo "created dir ${ec1_system_basedir}"
else
    echo "ERROR: directory ${ec1_system_basedir} exists already" 2>&1
    exit 1
fi

cd ${ec1_system_basedir}

repositories=(
	ec1_system_livelinks
	ec1_supervision_templates
	)

for repository in ${repositories[@]}
do
    echo "cloning https://github.com/epiculture/${repository}.git"
    git clone git://github.com/epiculture/${repository}.git
done

if [[ ! -d ${ec1_system_basedir}/ec1_supervision_templates/ub10.04_x86_64/ms/system_variation_01 ]]
then
    echo "ERROR: can't access directory ${ec1_system_basedir}/ec1_supervision_templates/ub10.04_x86_64/ms/system_variation_01" 2>&1
    exit 1
fi

rsync -avh --no-o --no-g --stats ${ec1_system_basedir}/ec1_supervision_templates/ub10.04_x86_64/ms/system_variation_01/ ${ec1_system_ms_basedir}/
rm -R ${ec1_system_basedir}/ec1_supervision_templates

#network
cp /etc/network/interfaces ${ec1_system_ms_basedir}/network/00livelinks/interfaces/interfaces_00ori
mv /etc/network/interfaces ${ec1_system_ms_basedir}/network/00livelinks/interfaces/
ln -s ${ec1_system_ms_basedir}/network/00livelinks/interfaces/interfaces /etc/network/

#bash
mv /etc/login.defs ${ec1_system_ms_basedir}/bash/00livelinks/etc_login.defs/login.defs_00ori
ln -s ${ec1_system_ms_basedir}/bash/00livelinks/etc_login.defs/login.defs /etc/

#TODO: check file and folder creation umask, may need to activate common-session
#mv /etc/pam.d/common-session ${ec1_system_ms_basedir}/pam/00livelinks/etc_common-session/common-session_00ori
#ln -s ${ec1_system_ms_basedir}/pam/00livelinks/etc_common-session/common-session /etc/pam.d/

#apt
mv /etc/apt/sources.list ${ec1_system_ms_basedir}/apt/00livelinks/sources.list/sources.list_00ori
ln -s ${ec1_system_ms_basedir}/apt/00livelinks/sources.list/sources.list /etc/apt/

#mount
mv /etc/fstab ${ec1_system_ms_basedir}/mount/00livelinks/fstab/
ln -s ${ec1_system_ms_basedir}/mount/00livelinks/fstab/fstab /etc/

#rvm
ln -s ${ec1_system_ms_basedir}/rvm/00livelinks/etc_rvmrc/rvmrc /etc/

DEBIAN_FRONTEND=noninteractive aptitude update; aptitude full-upgrade -y
aptitude install debconf-utils -y
echo "dash dash/sh boolean false"| debconf-set-selections; dpkg-reconfigure -f noninteractive dash
# TODO: check dependencies, particularly if the install of postfix in subsequent phases do not trigger the install of another SMTP server
aptitude install ntp sshfs shorewall mc tar gzip lzma rar unrar bzip2 arj lha rpm unace zip unzip p7zip vim clamav ncdu htop ttf-ubuntu-font-family ttf-droid ttf-liberation screen -y
aptitude clean

# >>> log end#{{{
echo "${0} done - $(e__datetime_sec)" >> ${ec1_script_log}
e__datetime_sec > ${ec1_script_log}.done
#}}}

#UNSURE: sleeping to provide enough time for reboot execution (it seems that subsequent commands called after the execution of this script begin before effective reboot)
reboot && sleep 10

# ____________________________________________________________________
# >>>>>  projet epiculture/ec1   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#{{{
# Sources, Infos & Contact : http://www.epiculture.org
# Author: Pierre-Maël Crétinon
# License: GNU GPLv3 ( www.epiculture.org/ec1/LICENSE )
# Copyright: 2010-2012 Pierre-Maël Crétinon
# Sponsor: studio Helianova - http://studio.helianova.com
# ――――――――――――――――――――――――――――――――――――――#}}}
# vim: ft=sh
